name: Test and Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.13.1]

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Check types
        run: npx tsc --noEmit

      - name: Test dashboard production build
        run: |
          # Start the dashboard server in the background
          npm run dashboard:prod &
          SERVER_PID=$!

          # Wait for server to start (max 30 seconds)
          echo "Waiting for dashboard server to start..."
          for i in {1..30}; do
            if curl -s -o /dev/null -w "%{http_code}" http://localhost:49743 | grep -q "200"; then
              echo "Dashboard server is running"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Dashboard server failed to start"
              kill $SERVER_PID 2>/dev/null || true
              exit 1
            fi
            sleep 1
          done

          # Verify the app is serving correctly
          RESPONSE=$(curl -s http://localhost:49743)
          if echo "$RESPONSE" | grep -q "<div id=\"root\"></div>"; then
            echo "Dashboard app is serving correctly"
          else
            echo "Dashboard app is not serving expected content"
            kill $SERVER_PID 2>/dev/null || true
            exit 1
          fi

          # Clean up
          kill $SERVER_PID 2>/dev/null || true
          echo "Dashboard production test completed successfully"
