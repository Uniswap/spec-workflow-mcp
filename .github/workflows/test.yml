name: Test and Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.13.1]

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Check types
        run: npx tsc --noEmit

      - name: Test dashboard production build
        run: |
          # Start the dashboard server in the background on port 49743
          echo "Starting dashboard server on port 49743..."
          npm run dashboard:prod:run-only &
          SERVER_PID=$!
          
          # Wait for server to start (max 60 seconds)
          echo "Waiting for dashboard server to start..."
          for i in {1..60}; do
            # Check if the server is responding on port 49743
            if curl -s -o /dev/null -w "%{http_code}" http://localhost:49743/ | grep -q "200"; then
              echo "Dashboard server is running on port 49743"
              break
            fi
            if [ $i -eq 60 ]; then
              echo "Dashboard server failed to start within 60 seconds"
              kill $SERVER_PID 2>/dev/null || true
              exit 1
            fi
            sleep 1
          done
          
          # Test that the dashboard is accessible and serving correct content
          echo "Testing dashboard content..."
          RESPONSE=$(curl -s http://localhost:49743/)
          
          # Check for the React root element
          if echo "$RESPONSE" | grep -q '<div id="root"></div>'; then
            echo "✓ Dashboard HTML structure verified (found root div)"
          else
            echo "✗ Dashboard HTML structure incorrect (missing root div)"
            echo "Response received:"
            echo "$RESPONSE" | head -50
            kill $SERVER_PID 2>/dev/null || true
            exit 1
          fi
          
          # Check for essential meta tags and script tags
          if echo "$RESPONSE" | grep -q '<meta charset="UTF-8"'; then
            echo "✓ Found UTF-8 meta tag"
          else
            echo "✗ Missing UTF-8 meta tag"
            kill $SERVER_PID 2>/dev/null || true
            exit 1
          fi
          
          # Check that JavaScript assets are being loaded
          if echo "$RESPONSE" | grep -q '<script'; then
            echo "✓ Found script tags (JavaScript assets)"
          else
            echo "✗ No script tags found"
            kill $SERVER_PID 2>/dev/null || true
            exit 1
          fi
          
          # Final verification with status code
          FINAL_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:49743/)
          if [ "$FINAL_CODE" = "200" ]; then
            echo "✓ Dashboard is serving correctly (HTTP 200)"
          else
            echo "✗ Dashboard returned HTTP $FINAL_CODE"
            kill $SERVER_PID 2>/dev/null || true
            exit 1
          fi
          
          # Clean up
          kill $SERVER_PID 2>/dev/null || true
          echo "Dashboard production test completed successfully"
